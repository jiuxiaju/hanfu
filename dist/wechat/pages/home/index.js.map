{"version":3,"file":"pages/home/index.js","mappingssources":["webpack:///./pages/home/index.ts"],"sourcesContent":["var __MOR_API__ = require('@morjs/api').mor;\n\nimport { __spreadArray } from \"tslib\";\nimport { aPage } from '@ali/mor-core';\nimport { get } from '../../services';\naPage({\n    data: {\n        swiperList: [],\n        activityList: [],\n        recommendArticles: [],\n        isLoadingSwiper: true,\n        titleBarHeight: 0,\n        isLoadingContent: true,\n        statusBarHeight: 0,\n        currentTab: '',\n        text: '',\n        currentPlaceholder: '汉服是什么',\n        currentQuery: '',\n        currentText: '',\n        stickyProps: {\n            offsetTop: 38,\n        },\n        swiperData: [],\n        tabs: [],\n        placeholder: \"\",\n        placeholderWords: [\n            { query: \"汉服\", text: \"汉服活动推荐\", currentTab: \"5\" },\n            { query: \"北京\", text: \"北京的汉服实体店推荐\", currentTab: \"1\" },\n            { query: \"汉服运动\", text: \"汉服运动是什么\", currentTab: \"0\" },\n            { query: \"汉服是什么\", text: \"汉服是什么\" }\n        ],\n        articleList: [],\n        isGlobalDataReady: false,\n        containerHeight: 0,\n        searchInputHeight: 0,\n        searchButtonHeight: 0,\n        rowColsAvatar: [{ size: '100px', type: 'circle' }],\n        rowColsContent: [{ width: '80%' }, { width: '100%' }, { width: '80%' }],\n        rowColsImage: [{ height: '192px', width: '100%', type: 'rect' }],\n        currentSwiperIndex: 0,\n        visible: true, config: {\n            \"activity_set\": {\n                \"fields\": [\"address\",],\n                \"displayValuesOnly\": [\"tags\", \"seasons\"],\n                \"fieldLabels\": { \"address\": \"地址\" }\n            }\n        },\n        suggestionMapping: []\n    },\n    onLoad: function () {\n        var _this = this;\n        var that = this;\n        this.getActivities();\n        wx.cloud.callFunction({\n            name: 'suggestion',\n            success: function (res) {\n                // 把获取到的数组赋值给页面数据中的mockData\n                var result = res.result;\n                console.log(result, 'result');\n                that.setData({\n                    suggestionMapping: result.simpleArray\n                });\n            },\n            fail: function (error) {\n                console.error('Cloud function call failed: ', error);\n            }\n        });\n        var app = getApp();\n        this.setDataFromDefault();\n        this.waitForGlobalData().then(function () {\n            _this.setDataFromGlobalData();\n            _this.setPlaceholderWord();\n            _this.setData({ isGlobalDataReady: true });\n        }).catch(function (error) {\n            console.error('全局数据加载失败:', error);\n        });\n        this.startPlaceholderUpdateTimer(); // 启动定期更新定时器\n        //判断场景值\n        var launchOptions = wx.getLaunchOptionsSync();\n        var scene = launchOptions.scene;\n        // 检查是否为场景值1089（从其他小程序返回）\n        if (scene !== 1089) {\n            // 不是从其他小程序返回，可以显示`t-notice-bar`\n            this.setData({ visible: true });\n            // 设置定时器3秒后隐藏`t-notice-bar`\n            setTimeout(function () {\n                _this.setData({ visible: false });\n            }, 3000);\n        }\n        else {\n            // 是从其他小程序返回的场景，不显示`t-notice-bar`\n            this.setData({ visible: false });\n        }\n        // 获取手机基础信息(状态栏高度)\n        var statusBarHeight = wx.getSystemInfoSync().statusBarHeight;\n        var titleBarHeight = this.getTitleBarHeight(statusBarHeight);\n        this.setData({\n            titleBarHeight: titleBarHeight,\n            statusBarHeight: statusBarHeight,\n        }, function () {\n            console.log(\"状态栏高度（statusBarHeight）:\", _this.data.statusBarHeight);\n            console.log(\"标题栏高度（titleBarHeight）:\", _this.data.titleBarHeight);\n        });\n        // 获取广告位图片\n        get('/home/getBannerImgs').then(function (data) {\n            _this.setData({\n                swiperList: data.map(function (o) { return o.url; }),\n                swiperData: data,\n                isLoadingSwiper: false\n            });\n            console.log(data, 'dat1a');\n        });\n        wx.cloud.callFunction({\n            name: 'onsearchArticle',\n            success: function (res) {\n                // 把获取到的数组赋值给页面数据中的mockData\n                var result = res.result;\n                console.log(result, 'result');\n                that.setData({\n                    articleList: result.data,\n                    config: result.config\n                });\n                that.processData(that.data.articleList);\n            },\n            fail: function (error) {\n                console.error('Cloud function call failed: ', error);\n            }\n        });\n    },\n    startPlaceholderUpdateTimer: function () {\n        var _this = this;\n        setInterval(function () {\n            if (_this.data.isGlobalDataReady) {\n                _this.setPlaceholderWord();\n            }\n            else {\n                console.log('使用本地默认占位符');\n                _this.setDataFromDefault();\n            }\n        }, 5000);\n    },\n    setDataFromDefault: function () {\n        this.setPlaceholderWord();\n    },\n    waitForGlobalData: function () {\n        var app = getApp();\n        return new Promise(function (resolve, reject) {\n            var checkInterval = setInterval(function () {\n                if (app.globalData.dataReady) {\n                    clearInterval(checkInterval);\n                    resolve();\n                }\n            }, 500);\n            setTimeout(function () {\n                clearInterval(checkInterval);\n                if (app.globalData.dataReady) {\n                    resolve();\n                }\n                else {\n                    reject(new Error('全局数据加载超时'));\n                }\n            }, 10000);\n        });\n    },\n    setDataFromGlobalData: function () {\n        var app = getApp();\n        var placeholderWords = app.globalData.placeholderWords || [];\n        if (Array.isArray(placeholderWords) && placeholderWords.length > 0) {\n            this.setData({\n                queryHistoryArr: app.globalData.queryHistoryArr || [],\n                placeholderWords: placeholderWords\n            });\n            console.log('页面更新时获得的 placeholderWords:', this.data.placeholderWords);\n            this.setPlaceholderWord();\n        }\n        else {\n            console.error('全局数据 placeholderWords 无效或未初始化');\n        }\n    },\n    setPlaceholderWord: function () {\n        var placeholderWords = this.data.placeholderWords;\n        if (Array.isArray(placeholderWords) && placeholderWords.length > 0) {\n            var randomIndex = Math.floor(Math.random() * placeholderWords.length);\n            var selectedPlaceholder = placeholderWords[randomIndex];\n            if (selectedPlaceholder) {\n                this.setData({\n                    placeholder: selectedPlaceholder.text,\n                    currentQuery: selectedPlaceholder.query,\n                    currentText: selectedPlaceholder.text,\n                    currentTab: selectedPlaceholder.currentTab,\n                    currentPlaceholder: selectedPlaceholder.text,\n                });\n            }\n            else {\n                console.error('选中的 placeholder 无效');\n            }\n        }\n        else {\n            console.error('placeholderWords 数据无效或为空');\n        }\n    },\n    // 处理数据，将推荐文章和按artype分开的文章分开，不处理数据内容\n    processData: function (data) {\n        var recommendArticles = [];\n        var artypeArticlesMap = {};\n        // 定义所有类型和标签\n        var labels = ['推荐', '穿搭', '妆造', '文学', '六艺', '其他'];\n        var artypeValues = ['recommend', '穿搭', '妆造', '文学', '六艺', '其他'];\n        // 初始化每个artype的类别\n        artypeValues.slice(1).forEach(function (artype) {\n            artypeArticlesMap[artype] = [];\n        });\n        // 分类数据 - 处理推荐\n        data.forEach(function (article) {\n            if (article.recommend) {\n                recommendArticles.push(article);\n            }\n        });\n        // 分类数据 - 处理具体类型\n        data.forEach(function (article) {\n            var artype = article.artype;\n            if (artypeValues.includes(artype)) {\n                artypeArticlesMap[artype].push(article);\n            }\n            else {\n                console.warn(\"Unrecognized artype: \" + artype, article);\n            }\n        });\n        // 生成 Tabs 数据\n        var tabs = __spreadArray([\n            { label: '推荐', value: '0', articles: recommendArticles }\n        ], artypeValues.slice(1).map(function (artype, index) {\n            var label = labels[index + 1];\n            return {\n                label: label,\n                value: artype,\n                articles: artypeArticlesMap[artype] || [] // 确保无数据时为[]\n            };\n        }), true);\n        this.setData({\n            tabs: tabs,\n            isLoadingContent: false\n        });\n    },\n    getActivities: function () {\n        var _this = this;\n        wx.cloud.callFunction({\n            name: 'getActivities', // 云函数名称\n        }).then(function (res) {\n            var result = res.result; // 云函数返回的结果\n            console.log(result, 'result');\n            // 更新组件的 state\n            _this.setData({\n                activityList: result.data,\n                config: res.result.config,\n                isLoadingContent: false\n            });\n            // 打印处理后的数据列表\n            console.log('Updated Info List:', _this.data.activityList);\n        }).catch(function (error) {\n            console.error('Error calling cloud function:', error);\n            // this.setData({ showLoading: false }); // 处理错误时, 隐藏加载动画\n        });\n    },\n    // 计算titleBar的高度，微信小程序无法自动提供\n    getTitleBarHeight: function (statusBarHeight) {\n        try {\n            var _a = wx.getMenuButtonBoundingClientRect(), top = _a.top, height = _a.height;\n            return (top - statusBarHeight) * 2 + height;\n        }\n        catch (error) {\n            return 48; // 默认标题栏高度\n        }\n    },\n    //分享给好友\n    onShareAppMessage: function () {\n        var promise = new Promise(function (resolve) {\n            setTimeout(function () {\n                resolve({\n                    title: '九霞裾',\n                });\n            }, 20);\n        });\n        return {\n            title: '九霞裾',\n            path: '/pages/home',\n            promise: promise,\n        };\n    },\n    //转发到朋友圈\n    onShareTimeline: function () {\n        return {\n            title: '快来看看',\n        };\n    },\n    //悬浮指引点击事件，点击取消\n    click: function (e) {\n        var trigger = e.detail.trigger;\n        console.log(\"click on the \" + trigger + \" area\");\n        this.setData({\n            visible: false,\n        });\n    },\n    //组件库轮播图有bug，\n    onTapSwiper: function (e) {\n        var index = e.currentTarget.dataset.index; // 获取点击的图片索引\n        var _a = this.data.swiperData[index], jump = _a.jump, jump_link = _a.jump_link, appId = _a.appId, extraData = _a.extraData;\n        // console.log('点击的轮播图数据:', this.data.swiperData[index])\n        switch (jump) {\n            case '1':\n                // 这里假设 jump_link 已经是一个有效的相对路径\n                wx.navigateTo({\n                    url: \"\" + jump_link,\n                    fail: function () {\n                        wx.navigateTo({ url: '/pages/home/index' });\n                    },\n                });\n                break;\n            case '2':\n                // 这里假设 appId 和 path 已经在 swiperData 中定义\n                wx.openEmbeddedMiniProgram({\n                    appId: appId,\n                    path: jump_link,\n                    extraData: extraData,\n                    success: function (res) {\n                        console.log('跳转成功', res);\n                    },\n                    fail: function (err) {\n                        console.error('跳转失败', err);\n                        wx.showToast({\n                            title: '跳转失败，请稍后再试',\n                            icon: 'none',\n                            duration: 2000\n                        });\n                    }\n                });\n            default:\n                // 如果没有定义跳转逻辑，可以在这里处理\n                break;\n        }\n    },\n    handleItemClick: function (e) {\n        var item = e.detail;\n        // 判断 item.source，根据两种情况分别跳转页面\n        if (item.source === 'activity_set') {\n            // 跳转到页面1\n            __MOR_API__.navigateTo({\n                url: \"/pages/activity-list/detail/index?activityId=\" + item._id,\n            });\n        }\n        else if (item.source === 'article') {\n            // 跳转到页面2\n            __MOR_API__.navigateTo({\n                url: \"/pages/article/detail?articleId=\" + item._id,\n            });\n        }\n    },\n    //对富文本进行处理\n    getRitch: function (rich) {\n        if (!rich) {\n            return '';\n        }\n        var richClone = rich.replace(/<[^>]*>/g, '');\n        return richClone;\n    },\n    // 跳转页面的统一函数\n    jump2Page: function (e) {\n        var pathKey = e.currentTarget.dataset.path; // 获取key值\n        // const routePath = this.data.routeMap[pathKey]; // 根据key获取路径\n        console.log(pathKey, 'pathKey', e.currentTarget);\n        if (pathKey === 'sports') {\n            // 如果 pathKey 是 'sports'，跳转到 sports 页面\n            __MOR_API__.navigateTo({\n                url: '/pages/sports/index'\n            });\n        }\n        else if (pathKey === 'population-list') {\n            __MOR_API__.navigateTo({\n                url: '/pages/population-list/index/index'\n            });\n        }\n        else {\n            __MOR_API__.navigateTo({\n                url: '/pages/activity-list/index/index'\n            });\n        }\n    },\n    // 跳转到活动详情页面\n    jump2ActivityDetailPage: function (e) {\n        var _id = e.currentTarget.dataset.item._id;\n        __MOR_API__.navigateTo({\n            url: \"/pages/activity/detail?activityId=\" + _id,\n        });\n    },\n    // 跳转到文章详情页面\n    jump2ArticleDetailPage: function (e) {\n        var _id = e.currentTarget.dataset.item._id;\n        __MOR_API__.navigateTo({\n            url: \"/pages/article/detail?articleId=\" + _id,\n        });\n    },\n    onJump2Search: function () {\n        __MOR_API__.navigateTo({ url: '/pages/search/search' });\n    },\n    onSearchButtonClick: function () {\n        var text = this.data.currentPlaceholder; // 如果 query 为空，使用默认占位符\n        var currentTab = this.data.currentTab;\n        var query = this.data.currentQuery;\n        console.log(query, currentTab, text);\n        this.handleSearch(query, currentTab, text);\n    },\n    queryInfos: function (query, currentTab, text) {\n        if (currentTab === void 0) { currentTab = '0'; }\n        if (text === void 0) { text = ''; }\n        console.log('query:', query, 'currentTab:', currentTab, text);\n        if (!text) {\n            text = query;\n        }\n        __MOR_API__.navigateTo({\n            url: \"/pages/result/result?query=\" + encodeURIComponent(query) + \"&currentTab=\" + currentTab + \"&text=\" + encodeURIComponent(text)\n        });\n    },\n    handleSearch: function (query, currentTab, text) {\n        // 检查输入(query)是否为空\n        // 在suggestionMapping数组中查找匹配项\n        var matchingItem = this.data.suggestionMapping.find(function (item) { return item.fieldA === query; });\n        if (matchingItem) {\n            // 如果找到匹配项，导航到matchingItem指定的URL\n            __MOR_API__.navigateTo({\n                url: matchingItem.link\n            });\n        }\n        else {\n            // 如果没有找到匹配项，执行查询Infos逻辑显示搜索结果\n            this.queryInfos(query, currentTab, text);\n        }\n        // 更新查询历史记录，可能会将query加入到某个存储搜索历史的数组\n    },\n});\n"],"names":[],"sourceRoot":""}