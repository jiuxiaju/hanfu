{"version":3,"file":"pages/result/result.js","mappingssources":["webpack:///./pages/result/result.ts"],"sourcesContent":["var __MOR_API__ = require('@morjs/api').mor;\n\nimport { __assign } from \"tslib\";\nimport { aPage } from '@ali/mor-core';\naPage({\n    data: {\n        image: 'https://tdesign.gtimg.com/mobile/demos/empty1.png',\n        query: '',\n        text: '',\n        currentTab: 0,\n        navbarHeight: 0,\n        showSearchResult: false,\n        stickyProps: {\n            offsetTop: 80,\n        },\n        renderMarker: [],\n        showLoading: true,\n        list: [],\n        backTopTheme: 'round',\n        backTopText: '顶部',\n        scrollTop: 0,\n        displayList: [],\n        batchSize: 10,\n        currentDisplayCount: 0,\n        showNoData: false,\n        scrollTimeoutId: null,\n        config: {\n            \"offline_shop_set\": {\n                \"fields\": [\"tags\", \"adress\"],\n                \"displayValuesOnly\": [\"adress\", \"tags\"],\n                \"fieldLabels\": {},\n                \"styles\": {\n                    \"tags\": {\n                        \"background-color\": \"#6dd40033\",\n                        \"color\": \"#53A101\"\n                    }\n                }\n            },\n            \"activity_set\": {\n                \"fields\": [\"address\",],\n                \"displayValuesOnly\": [\"tags\", \"seasons\"],\n                \"fieldLabels\": { \"address\": \"地址\" }\n            },\n            \"knowledge_set\": {\n                \"fields\": [\"chaodai\", \"tags\", \"seasons\", \"detail\"],\n                \"displayValuesOnly\": [\"tags\", \"seasons\", \"detail\"],\n                \"fieldLabels\": { \"chaodai\": \"朝代\" },\n                \"styles\": {\n                    \"chaodai\": {\n                        \"background-color\": \"#a866001a\",\n                        \"color\": \"#A86600\"\n                    },\n                    \"seasons\": {\n                        \"background-color\": \"#e0ffe0\",\n                        \"color\": \"#53A101\"\n                    }\n                }\n            },\n            \"hanfu_style\": {\n                \"fields\": ['brand', 'sizes', 'delivery_time'],\n                \"displayValuesOnly\": [],\n                \"fieldLabels\": { 'brand': \"品牌\", 'sizes': \"尺码\", 'delivery_time': '发货周期' },\n                \"styles\": {\n                    \"brand\": {\n                        \"background-color\": \"#6dd40033\",\n                        \"color\": \"#53A101\"\n                    }\n                }\n            },\n            \"online_shop_set\": {\n                \"fields\": [\"style\", \"store\"],\n                \"displayValuesOnly\": [\"style\"],\n                \"fieldLabels\": {},\n                \"styles\": {\n                    \"style\": {\n                        \"background-color\": \"#a866001a\",\n                        \"color\": \"#A86600\"\n                    }\n                }\n            },\n        },\n        menuData: [],\n        // 存储每步的时间情况\n        stepTimes: [],\n        menuFilters: {},\n        dynamicFilters: {},\n        scrollTopUpdates: [],\n        showCard: false,\n        targetWord: '汉服',\n        filteredData: {},\n    },\n    onLoad: function (options) {\n        var _this = this;\n        // 获取系统信息\n        // 使用选择器查询组件\n        var query = wx.createSelectorQuery();\n        query.select('#navbar').boundingClientRect();\n        query.exec(function (res) {\n            if (res[0]) {\n                var navbarHeight = res[0].height + 42; // 导航栏高度加100\n                _this.setData({\n                    navbarHeight: navbarHeight,\n                });\n            }\n        });\n        console.log(this.data.navbarHeight, 'navbarHeight');\n        var currentTab = options.currentTab, text = options.text;\n        console.log(currentTab, 'currentTab', text);\n        this.setData({\n            currentTab: currentTab,\n            text: text\n        });\n        if (options.query) {\n            var query_1 = decodeURIComponent(options.query);\n            this.setData({\n                query: query_1,\n            });\n            //接受参数，进行结果搜索。\n            this.queryInfoss(query_1);\n            this.fetchMenuData();\n        }\n    },\n    fetchMenuData: function () {\n        var _this = this;\n        wx.cloud.callFunction({\n            name: 'menuOptions', // 请替换成您的云函数名\n        }).then(function (res) {\n            var result = res.result; // 这里接收到的result应该是一个数组\n            _this.setData({\n                menuData: result\n            });\n        });\n    },\n    // 分享好友\n    onShareAppMessage: function () {\n        var app = getApp(); // 获取全局应用实例\n        var promise = new Promise(function (resolve) {\n            app.generateShareInfo().then(function (shareInfo) {\n                // 在这里处理生成的分享信息\n                resolve(shareInfo);\n            });\n        });\n        return {\n            title: '九霞裾',\n            path: '/pages/home',\n            promise: promise\n        };\n    },\n    //转发到朋友圈\n    onShareTimeline: function () {\n        return {\n            title: '快来看看'\n        };\n    },\n    onInputFocus: function (e) {\n        // 返回上一页\n        wx.navigateBack({\n            delta: 1 // 返回上一级页面\n        });\n    },\n    onScrollViewScroll: function (e) {\n        var scrollTop = e.detail.scrollTop; // 用户当前已滚动的距离\n        var scrollHeight = e.detail.scrollHeight; // scroll-view 内容的总高度\n        var scrollViewHeight = 700; // scroll-view 的固定高度\n        var triggerHeight = 200; // 触发加载数据的提前量（距底部 200px）\n        // 检查是否接近底部，并触发数据加载\n        if (scrollTop + scrollViewHeight >= scrollHeight - triggerHeight) {\n            this.onScrollToLower();\n        }\n    },\n    //监控页面滚动\n    onScrollToLower: function () {\n        // 当滑动到页面底部时触发\n        var _a = this.data, list = _a.list, displayList = _a.displayList, currentDisplayCount = _a.currentDisplayCount, batchSize = _a.batchSize;\n        var nextDisplayCount = currentDisplayCount + batchSize;\n        console.log(currentDisplayCount, 'currentDisplayCount');\n        if (currentDisplayCount < list.length) {\n            // 有更多数据可以加载\n            var moreData = list.slice(currentDisplayCount, nextDisplayCount);\n            // 将新的数据追加到现有的 displayList 中\n            var updatedDisplayList = this.data.displayList.concat(moreData);\n            this.setData({\n                displayList: updatedDisplayList,\n                currentDisplayCount: nextDisplayCount,\n                showNoData: nextDisplayCount >= list.length // 当没有更多数据时显示提示，否则不显示\n            });\n        }\n        else {\n            // 如果没有更多的数据来加载\n            this.setData({\n                showNoData: true\n            });\n        }\n    },\n    //菜单筛选\n    handleMenuData: function (event) {\n        var menuData = event.detail;\n        this.setData({\n            menuFilters: menuData\n        });\n        var filteredData = __assign(__assign({}, menuData), this.data.dynamicFilters);\n        this.queryInfoss(this.data.query, this.data.currentTab, filteredData);\n        this.handleToTop();\n    },\n    handleDynamicChange: function (event) {\n        var dynamicData = event.detail;\n        this.setData({\n            dynamicFilters: dynamicData\n        });\n        var filteredData = __assign(__assign({}, this.data.menuFilters), dynamicData);\n        console.log(filteredData, 'filteredData-dynamicFilters');\n        this.queryInfoss(this.data.query, this.data.currentTab, filteredData, true);\n        this.handleToTop();\n    },\n    // 搜索和筛选函数\n    queryInfoss: function (query, tab, filteredData, isDynamicFilter) {\n        var _this = this;\n        if (query === void 0) { query = this.data.query; }\n        if (tab === void 0) { tab = this.data.currentTab; }\n        if (filteredData === void 0) { filteredData = {}; }\n        if (isDynamicFilter === void 0) { isDynamicFilter = false; }\n        // 立即显示加载提示\n        wx.showLoading({ title: '搜索中' });\n        wx.cloud.callFunction({\n            name: 'search',\n            data: {\n                query: query,\n                tab: tab === 'all' ? undefined : tab,\n                filteredData: filteredData\n            }\n        })\n            .then(function (res) {\n            wx.hideLoading(); // 搜索成功后隐藏加载提示\n            var result = res.result;\n            _this.setData({\n                list: result.data,\n                currentTab: tab,\n                config: result.config,\n                query: query,\n                currentDisplayCount: 10,\n                showSearchResult: true,\n                displayList: result.data.slice(0, _this.data.batchSize), // 初始显示第一批数据\n            });\n            // 仅在非动态筛选时更新 tabsData\n            if (!isDynamicFilter) {\n                _this.setData({\n                    mergedData: result.mergedData || {}, // 默认值为空对象\n                });\n            }\n        })\n            .catch(function (err) {\n            console.error(err);\n        });\n    },\n    //返回顶部\n    handleToTop: function () {\n        console.log(this.data.displayList, '测试分步加载一场');\n        this.setData({ scrollTop: 0 });\n    },\n    // handleToTop() {\n    //   wx.pageScrollTo({\n    //     scrollTop: 0,\n    //     duration: 500  // 滚动动画的持续时间，默认是 300ms\n    //   });\n    // },\n    // onRenderComplete(e) {\n    //   const { id } = e.detail;\n    //   const { renderMarker, displayList } = this.data;\n    //   console.log('已完成',id)\n    //      // 如果 renderMarker 中没有此 id，则标记其为已渲染\n    //      if (!renderMarker.includes(id)) {\n    //       renderMarker.push(id);\n    //       // 更新 displayList 中对应 id 的项，增加已处理字段\n    //       const updatedDisplayList = displayList.map(item => \n    //         item._id === id ? { ...item, isRendered: true } : item\n    //       );\n    //       this.setData({ \n    //         renderMarker,\n    //         displayList: updatedDisplayList \n    //       });\n    //       // 在调用 setData 后立即检查是否更新\n    //       console.log('updatedDisplayList:', updatedDisplayList);\n    //       console.log('displayList after update:', this.data.displayList);\n    //     }\n    // },\n    //tab切换之后，再次搜索。\n    onTabsChange: function (e) {\n        this.setData({\n            filteredData: {}\n        });\n        this.queryInfoss(this.data.query, e.detail.value);\n        this.handleToTop();\n    },\n    // 检查是否可跳转的方法\n    checkShouldNavigate: function (item, successCallback) {\n        if (!item.hasOwnProperty('shouldNavigate') || !item.shouldNavigate) {\n            __MOR_API__.showToast({ title: '该卡片不可跳转', icon: 'none' });\n            return;\n        }\n        successCallback();\n    },\n    handleItemClick: function (event) {\n        var Item = event.detail;\n        // // 根据不同的source进行不同的跳转或逻辑处理\n        switch (Item.source) {\n            case 'activity_set':\n                __MOR_API__.navigateTo({\n                    url: \"/pages/activity-list/detail/index?activityId=\" + Item._id,\n                });\n                break;\n            case 'offline_shop_set':\n                this.checkShouldNavigate(Item, function () {\n                    __MOR_API__.navigateTo({\n                        url: \"/pages/shop/offline-detail/index?itemId=\" + Item._id,\n                    });\n                });\n                break;\n            case 'article':\n                __MOR_API__.navigateTo({\n                    url: \"/pages/article/detail?articleId=\" + Item._id,\n                });\n                break;\n            case 'knowledge_set':\n                __MOR_API__.navigateTo({\n                    url: \"/pages/population-list/detail/index?PopulationById=\" + Item._id,\n                });\n                break;\n            case 'online_shop_set':\n                this.checkShouldNavigate(Item, function () {\n                    __MOR_API__.navigateTo({\n                        url: \"/pages/shop/online-detail/index?itemId=\" + Item._id,\n                    });\n                });\n                break;\n            case 'hanfu_style':\n                this.checkShouldNavigate(Item, function () {\n                    __MOR_API__.navigateTo({\n                        url: \"/pages/shop/style/index?itemId=\" + Item._id,\n                    });\n                });\n                break;\n            // 添加更多 case 根据不同的 source 处理不同的跳转或逻辑\n            default:\n                console.log('暂时没有');\n                break;\n        }\n    }\n});\n"],"names":[],"sourceRoot":""}