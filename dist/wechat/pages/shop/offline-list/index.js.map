{"version":3,"file":"pages/shop/offline-list/index.js","mappingssources":["webpack:///./pages/shop/offline-list/index.ts"],"sourcesContent":["var __MOR_API__ = require('@morjs/api').mor;\n\nimport { __assign } from \"tslib\";\n/*\n * @Author: 兼爱\n * @Date: 2023-10-24 01:56:21\n * @LastEditTime: 2023-12-08 03:32:23\n * @LastEditors: 兼爱\n * @Description:\n * @FilePath: /hanfu/src/components/shop/offline/offline.ts\n * 可以输入预定的版权声明、个性签名、空行等\n */\nimport { aComponent } from '@ali/mor-core';\n// import { searchOfflineShop } from '../../../services/shop';\naComponent({\n    props: {\n        className: '',\n        data: {},\n        onClick: function () { },\n    },\n    data: {\n        rowColsAvatar: [{ size: '100px', type: 'circle' }],\n        rowColsImage: [{ size: '100px', type: 'rect' }],\n        rowColsContent: [{ width: '80%' }, { width: '100%' }, { width: '80%' }],\n        filteredData: {},\n        cur: {},\n        position: [\n            { value: 'top', text: '顶部弹出' },\n            { value: 'left', text: '左侧弹出' },\n            { value: 'center', text: '中间弹出' },\n            { value: 'bottom', text: '底部弹出' },\n            { value: 'right', text: '右侧弹出' },\n        ],\n        support: [],\n        // visible: false ,// 控制弹窗显示状态\n        options: [\n            { label: '妆造', value: 'makeup' },\n            { label: '摄影', value: 'photo_shoot' },\n        ],\n        dynamicFilters: {},\n        mergedData: {},\n        menuData: [],\n        currentTab: 1,\n        region: [],\n        showLoading: true,\n        list: [],\n        displayList: [],\n        batchSize: 10,\n        currentDisplayCount: 0,\n        showNoData: false,\n        supportLabel: '全部',\n        areaLabel: '地区选择',\n        config: {}\n    },\n    didMount: function () {\n        this.onSearch();\n        this.fetchMenuData();\n    },\n    methods: {\n        handlePopup: function (e) {\n            var _this = this;\n            var item = e.currentTarget.dataset.item;\n            this.setData({\n                cur: item,\n            }, function () {\n                _this.setData({ visible: true });\n            });\n        },\n        onVisibleChange: function (e) {\n            this.setData({\n                visible: e.detail.visible,\n            });\n        },\n        onClick: function () {\n        },\n        onScrollViewScroll: function (e) {\n            var scrollTop = e.detail.scrollTop; // 用户当前已滚动的距离\n            var scrollHeight = e.detail.scrollHeight; // scroll-view 内容的总高度\n            var scrollViewHeight = 700; // scroll-view 的固定高度\n            var triggerHeight = 200; // 触发加载数据的提前量（距底部 200px）\n            // 检查是否接近底部，并触发数据加载\n            if (scrollTop + scrollViewHeight >= scrollHeight - triggerHeight) {\n                this.onScrollToLower();\n            }\n        },\n        //监控页面滚动\n        onScrollToLower: function () {\n            // 当滑动到页面底部时触发\n            var _a = this.data, list = _a.list, displayList = _a.displayList, currentDisplayCount = _a.currentDisplayCount, batchSize = _a.batchSize;\n            var nextDisplayCount = currentDisplayCount + batchSize;\n            if (currentDisplayCount < list.length) {\n                // 有更多数据可以加载\n                var moreData = list.slice(currentDisplayCount, nextDisplayCount);\n                this.setData({\n                    displayList: displayList.concat(moreData),\n                    currentDisplayCount: nextDisplayCount, // 更新已显示的数据数量\n                });\n            }\n        },\n        handleItemClick: function (event) {\n            var item = event.detail;\n            // 检查 shouldNavigate 字段\n            if (!item.hasOwnProperty('shouldNavigate') || !item.shouldNavigate) {\n                __MOR_API__.showToast({ title: '该店铺不可跳转', icon: 'none' });\n                return;\n            }\n            var itemId = item._id;\n            __MOR_API__.navigateTo({\n                url: \"/pages/shop/offline-detail/index?itemId=\" + itemId,\n            });\n        },\n        //返回顶部\n        handleToTop: function () {\n            this.setData({ scrollTop: 0 });\n        },\n        // handleMenuData(event) {\n        //   const filterData = event.detail;\n        //   this.setData({\n        //     filteredData: filterData\n        //   });\n        //   const filteredData = this.data.filteredData;\n        //   console.log('filteredData12', filteredData)\n        //   this.onSearch(filteredData)\n        // },\n        // handleDynamicChange(event) {\n        //   const dynamicData = event.detail;\n        //   this.setData({\n        //     dynamicFilters: dynamicData\n        //   });\n        //   const filteredData = {\n        //     ...this.data.menuFilters,\n        //     ...dynamicData\n        //   };\n        //   console.log(filteredData, 'filteredData-dynamicFilters')\n        //   this.queryInfoss(this.data.query, this.data.currentTab, filteredData, true);\n        // },\n        fetchMenuData: function () {\n            var _this = this;\n            wx.cloud.callFunction({\n                name: 'menuOptions', // 请替换成您的云函数名\n            }).then(function (res) {\n                var result = res.result; // 这里接收到的result应该是一个数组\n                _this.setData({\n                    menuData: result\n                });\n            });\n        },\n        //菜单筛选\n        handleMenuData: function (event) {\n            var menuData = event.detail;\n            this.setData({\n                menuFilters: menuData\n            });\n            var filteredData = __assign(__assign({}, menuData), this.data.dynamicFilters);\n            this.onSearch(filteredData);\n        },\n        handleDynamicChange: function (event) {\n            var dynamicData = event.detail;\n            this.setData({\n                dynamicFilters: dynamicData\n            });\n            var filteredData = __assign(__assign({}, this.data.menuFilters), dynamicData);\n            this.onSearch(filteredData, true);\n            console.log(filteredData, 'filteredData-dynamicFilters');\n        },\n        onSearch: function (filteredData, isDynamicFilter) {\n            var _this = this;\n            if (filteredData === void 0) { filteredData = {}; }\n            if (isDynamicFilter === void 0) { isDynamicFilter = false; }\n            console.log(filteredData, 'filteredData2');\n            wx.cloud.callFunction({\n                // 云函数名称\n                name: 'onsearchOfflineShop',\n                // 传给云函数的参数\n                data: {\n                    filteredData: filteredData,\n                },\n            })\n                .then(function (res) {\n                var result = res.result;\n                if (result) {\n                    var dataList = result.data;\n                    if (dataList && dataList.length > 0) {\n                        var newData = {\n                            config: result.config,\n                            list: dataList,\n                            displayList: dataList.slice(0, _this.data.batchSize),\n                            showLoading: false,\n                            showNoData: false,\n                            currentDisplayCount: 10\n                        };\n                        if (!isDynamicFilter) {\n                            newData.mergedData = result.mergedData || {}; // 仅在非动态筛选时更新 mergedData\n                        }\n                        _this.setData(newData);\n                    }\n                    else {\n                        _this.setData({\n                            showNoData: true,\n                            showLoading: false, // 数据加载完毕但是无数据，隐藏加载动画\n                        });\n                    }\n                }\n                else {\n                    _this.setData({\n                        showNoData: true,\n                        showLoading: false, // 数据加载失败，显示无数据提示\n                    });\n                }\n            })\n                .catch(function (err) {\n                console.error(err);\n                _this.setData({\n                    showNoData: true,\n                    showLoading: false, // 请求失败，显示无数据提示\n                });\n            });\n        }\n    },\n});\n"],"names":[],"sourceRoot":""}