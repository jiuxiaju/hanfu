{"version":3,"file":"npm_components/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/grid/grid.js","mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../node_modules/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/grid/grid.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isObject, SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nconst { prefix } = config;\nconst name = `${prefix}-grid`;\nlet Grid = class Grid extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.externalClasses = ['t-class'];\n        this.relations = {\n            '../grid-item/grid-item': {\n                type: 'descendant',\n            },\n        };\n        this.properties = props;\n        this.data = {\n            prefix,\n            classPrefix: name,\n            contentStyle: '',\n        };\n        this.observers = {\n            'column,hover,align'() {\n                this.updateContentStyle();\n            },\n            'gutter,border'() {\n                this.updateContentStyle();\n                this.doForChild((child) => child.updateStyle());\n            },\n        };\n        this.lifetimes = {\n            attached() {\n                this.updateContentStyle();\n            },\n        };\n        this.methods = {\n            doForChild(action) {\n                this.$children.forEach(action);\n            },\n            updateContentStyle() {\n                const contentStyles = [];\n                const marginStyle = this.getContentMargin();\n                marginStyle && contentStyles.push(marginStyle);\n                this.setData({\n                    contentStyle: contentStyles.join(';'),\n                });\n            },\n            getContentMargin() {\n                const { gutter } = this.properties;\n                let { border } = this.properties;\n                if (!border)\n                    return `margin-left:-${gutter}rpx; margin-top:-${gutter}rpx`;\n                if (!isObject(border))\n                    border = {};\n                const { width = 2 } = border;\n                return `margin-left:-${width}rpx; margin-top:-${width}rpx`;\n            },\n        };\n    }\n};\nGrid = __decorate([\n    wxComponent()\n], Grid);\nexport default Grid;\n"],"names":[],"sourceRoot":""}