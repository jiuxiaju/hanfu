{"version":3,"file":"npm_components/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/popup/popup.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../node_modules/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/popup/popup.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport transition from '../mixins/transition';\nimport useCustomNavbar from '../mixins/using-custom-navbar';\ndelete props.visible;\nconst { prefix } = config;\nconst name = `${prefix}-popup`;\nlet Popup = class Popup extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.externalClasses = [`${prefix}-class`, `${prefix}-class-content`];\n        this.behaviors = [transition(), useCustomNavbar];\n        this.options = {\n            multipleSlots: true,\n        };\n        this.properties = props;\n        this.data = {\n            prefix,\n            classPrefix: name,\n        };\n        this.methods = {\n            handleOverlayClick() {\n                const { closeOnOverlayClick } = this.properties;\n                if (closeOnOverlayClick) {\n                    this.triggerEvent('visible-change', { visible: false, trigger: 'overlay' });\n                }\n            },\n            handleClose() {\n                this.triggerEvent('visible-change', { visible: false, trigger: 'close-btn' });\n            },\n        };\n    }\n};\nPopup = __decorate([\n    wxComponent()\n], Popup);\nexport default Popup;\n"],"names":[],"sourceRoot":""}