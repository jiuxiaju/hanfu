{"version":3,"file":"npm_components/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/dropdown-menu/dropdown-menu.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../node_modules/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/dropdown-menu/dropdown-menu.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { calcIcon } from '../common/utils';\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-menu`;\nlet DropdownMenu = class DropdownMenu extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.externalClasses = [`${prefix}-class`, `${prefix}-class-item`, `${prefix}-class-label`, `${prefix}-class-icon`];\n        this.properties = props;\n        this.nodes = null;\n        this.data = {\n            prefix,\n            classPrefix: name,\n            menus: null,\n            activeIdx: -1,\n            bottom: 0,\n            _arrowIcon: { name: props.arrowIcon.value },\n        };\n        this.relations = {\n            '../dropdown-item/dropdown-item': {\n                type: 'child',\n            },\n        };\n        this.lifetimes = {\n            ready() {\n                this.getAllItems();\n            },\n        };\n        this.observers = {\n            arrowIcon(v) {\n                this.setData({\n                    _arrowIcon: calcIcon(v),\n                });\n            },\n            activeIdx(v) {\n                this.triggerEvent(v === -1 ? 'close' : 'open');\n            },\n        };\n        this.methods = {\n            toggle(index) {\n                const { activeIdx, duration } = this.data;\n                const prevItem = this.$children[activeIdx];\n                const currItem = this.$children[index];\n                if (currItem === null || currItem === void 0 ? void 0 : currItem.data.disabled)\n                    return;\n                if (activeIdx !== -1) {\n                    prevItem.triggerEvent('close');\n                    prevItem.setData({\n                        show: false,\n                    }, () => {\n                        setTimeout(() => {\n                            prevItem.triggerEvent('closed');\n                        }, duration);\n                    });\n                }\n                if (index == null || activeIdx === index) {\n                    this.setData({\n                        activeIdx: -1,\n                    });\n                }\n                else {\n                    currItem.triggerEvent('open');\n                    this.setData({\n                        activeIdx: index,\n                    });\n                    currItem.setData({\n                        show: true,\n                    }, () => {\n                        setTimeout(() => {\n                            currItem.triggerEvent('opened');\n                        }, duration);\n                    });\n                }\n            },\n            getAllItems() {\n                const menus = this.$children.map(({ data }) => ({\n                    label: data.label || data.computedLabel,\n                    disabled: data.disabled,\n                }));\n                this.setData({\n                    menus,\n                });\n            },\n            handleToggle(e) {\n                const { index } = e.currentTarget.dataset;\n                this.toggle(index);\n            },\n            noop() { },\n        };\n    }\n};\nDropdownMenu = __decorate([\n    wxComponent()\n], DropdownMenu);\nexport default DropdownMenu;\n"],"names":[],"sourceRoot":""}