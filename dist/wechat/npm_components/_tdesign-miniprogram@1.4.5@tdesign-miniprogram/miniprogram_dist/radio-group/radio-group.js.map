{"version":3,"file":"npm_components/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/radio-group/radio-group.js","mappingssources":["webpack:///../node_modules/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/radio-group/radio-group.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport config from '../common/config';\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport props from './props';\nconst { prefix } = config;\nconst name = `${prefix}-radio-group`;\nlet RadioGroup = class RadioGroup extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.externalClasses = [`${prefix}-class`];\n        this.data = {\n            prefix,\n            classPrefix: name,\n            radioOptions: [],\n        };\n        this.relations = {\n            '../radio/radio': {\n                type: 'descendant',\n                linked(target) {\n                    const { value, disabled } = this.data;\n                    target.setData({\n                        checked: value === target.data.value,\n                    });\n                    target.setDisabled(disabled);\n                },\n            },\n        };\n        this.properties = props;\n        this.controlledProps = [\n            {\n                key: 'value',\n                event: 'change',\n            },\n        ];\n        this.observers = {\n            value(v) {\n                this.getChildren().forEach((item) => {\n                    item.setData({\n                        checked: v === item.data.value,\n                    });\n                });\n            },\n            options() {\n                this.initWithOptions();\n            },\n            disabled(v) {\n                var _a;\n                if ((_a = this.data.options) === null || _a === void 0 ? void 0 : _a.length) {\n                    this.initWithOptions();\n                    return;\n                }\n                this.getChildren().forEach((item) => {\n                    item.setDisabled(v);\n                });\n            },\n        };\n        this.methods = {\n            getChildren() {\n                let items = this.$children;\n                if (!(items === null || items === void 0 ? void 0 : items.length)) {\n                    items = this.selectAllComponents(`.${prefix}-radio-option`);\n                }\n                return items;\n            },\n            updateValue(value) {\n                this._trigger('change', { value });\n            },\n            handleRadioChange(e) {\n                const { checked } = e.detail;\n                const { value, index, allowUncheck } = e.target.dataset;\n                this._trigger('change', checked === false && allowUncheck ? { value: null, index } : { value, index });\n            },\n            initWithOptions() {\n                const { options, value, keys, disabled } = this.data;\n                if (!(options === null || options === void 0 ? void 0 : options.length) || !Array.isArray(options)) {\n                    this.setData({\n                        radioOptions: [],\n                    });\n                    return;\n                }\n                const optionsValue = [];\n                try {\n                    options.forEach((element) => {\n                        var _a, _b, _c;\n                        const typeName = typeof element;\n                        if (typeName === 'number' || typeName === 'string') {\n                            optionsValue.push({\n                                label: `${element}`,\n                                value: element,\n                                checked: value === element,\n                                disabled,\n                            });\n                        }\n                        else if (typeName === 'object') {\n                            optionsValue.push(Object.assign(Object.assign({}, element), { label: element[(_a = keys === null || keys === void 0 ? void 0 : keys.label) !== null && _a !== void 0 ? _a : 'label'], value: element[(_b = keys === null || keys === void 0 ? void 0 : keys.value) !== null && _b !== void 0 ? _b : 'value'], checked: value === element[(_c = keys === null || keys === void 0 ? void 0 : keys.value) !== null && _c !== void 0 ? _c : 'value'], disabled: element.disabled || disabled }));\n                        }\n                    });\n                    this.setData({\n                        radioOptions: optionsValue,\n                    });\n                }\n                catch (error) {\n                    console.error('error', error);\n                }\n            },\n        };\n    }\n};\nRadioGroup = __decorate([\n    wxComponent()\n], RadioGroup);\nexport default RadioGroup;\n"],"names":[],"sourceRoot":""}