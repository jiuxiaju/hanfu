{"version":3,"file":"npm_components/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/navbar/navbar.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///../node_modules/_tdesign-miniprogram@1.4.5@tdesign-miniprogram/miniprogram_dist/navbar/navbar.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport { getRect } from '../common/utils';\nimport config from '../common/config';\nimport props from './props';\nconst { prefix } = config;\nconst name = `${prefix}-navbar`;\nlet Navbar = class Navbar extends SuperComponent {\n    constructor() {\n        super(...arguments);\n        this.externalClasses = [\n            `${prefix}-class`,\n            `${prefix}-class-placeholder`,\n            `${prefix}-class-content`,\n            `${prefix}-class-title`,\n            `${prefix}-class-left`,\n            `${prefix}-class-center`,\n            `${prefix}-class-left-icon`,\n            `${prefix}-class-home-icon`,\n            `${prefix}-class-capsule`,\n            `${prefix}-class-nav-btn`,\n        ];\n        this.timer = null;\n        this.options = {\n            multipleSlots: true,\n        };\n        this.properties = props;\n        this.observers = {\n            visible(visible) {\n                const { animation } = this.properties;\n                const visibleClass = `${name}${visible ? '--visible' : '--hide'}`;\n                this.setData({\n                    visibleClass: `${visibleClass}${animation ? '-animation' : ''}`,\n                });\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                if (animation) {\n                    this.timer = setTimeout(() => {\n                        this.setData({\n                            visibleClass,\n                        });\n                    }, 300);\n                }\n            },\n            'title,titleMaxLength'() {\n                const { title } = this.properties;\n                const titleMaxLength = this.properties.titleMaxLength || Number.MAX_SAFE_INTEGER;\n                let temp = title.slice(0, titleMaxLength);\n                if (titleMaxLength < title.length)\n                    temp += '...';\n                this.setData({\n                    showTitle: temp,\n                });\n            },\n        };\n        this.data = {\n            prefix,\n            classPrefix: name,\n            boxStyle: '',\n            showTitle: '',\n            hideLeft: false,\n            hideCenter: false,\n        };\n        this.methods = {\n            queryElements(capsuleRect) {\n                Promise.all([\n                    getRect(this, `.${this.data.classPrefix}__left`),\n                    getRect(this, `.${this.data.classPrefix}__center`),\n                ]).then(([leftRect, centerRect]) => {\n                    if (leftRect.right > capsuleRect.left) {\n                        this.setData({\n                            hideLeft: true,\n                            hideCenter: true,\n                        });\n                    }\n                    else if (centerRect.right > capsuleRect.left) {\n                        this.setData({\n                            hideLeft: false,\n                            hideCenter: true,\n                        });\n                    }\n                    else {\n                        this.setData({\n                            hideLeft: false,\n                            hideCenter: false,\n                        });\n                    }\n                });\n            },\n            goBack() {\n                const { delta } = this.data;\n                const that = this;\n                this.triggerEvent('go-back');\n                if (delta > 0) {\n                    wx.navigateBack({\n                        delta,\n                        fail(e) {\n                            that.triggerEvent('fail', e);\n                        },\n                        complete(e) {\n                            that.triggerEvent('complete', e);\n                        },\n                        success(e) {\n                            that.triggerEvent('success', e);\n                        },\n                    });\n                }\n            },\n        };\n    }\n    attached() {\n        let rect = null;\n        if (wx.getMenuButtonBoundingClientRect) {\n            rect = wx.getMenuButtonBoundingClientRect();\n        }\n        if (!rect)\n            return;\n        wx.getSystemInfo({\n            success: (res) => {\n                const boxStyleList = [];\n                boxStyleList.push(`--td-navbar-padding-top: ${res.statusBarHeight}px`);\n                if (rect && (res === null || res === void 0 ? void 0 : res.windowWidth)) {\n                    boxStyleList.push(`--td-navbar-right: ${res.windowWidth - rect.left}px`);\n                }\n                boxStyleList.push(`--td-navbar-capsule-height: ${rect.height}px`);\n                boxStyleList.push(`--td-navbar-capsule-width: ${rect.width}px`);\n                boxStyleList.push(`--td-navbar-height: ${(rect.top - res.statusBarHeight) * 2 + rect.height}px`);\n                this.setData({\n                    boxStyle: `${boxStyleList.join('; ')}`,\n                });\n                if (wx.onMenuButtonBoundingClientRectWeightChange) {\n                    wx.onMenuButtonBoundingClientRectWeightChange((res) => this.queryElements(res));\n                }\n            },\n            fail: (err) => {\n                console.error('navbar 获取系统信息失败', err);\n            },\n        });\n    }\n    detached() {\n        if (wx.offMenuButtonBoundingClientRectWeightChange) {\n            wx.offMenuButtonBoundingClientRectWeightChange((res) => this.queryElements(res));\n        }\n    }\n};\nNavbar = __decorate([\n    wxComponent()\n], Navbar);\nexport default Navbar;\n"],"names":[],"sourceRoot":""}